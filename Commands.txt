Команды для копирования в консоль:

1) Выбор рабочей директории: cd /e/GitHub/Develolpers_new

2) Добавление в индекс всех данных в репозитории: git add .
3) Создание коммита: git commit -m "<comment>"
  -а позволяет одной командой проиндексировать всё и сделать коммит
  Пример комманды: git commit -a -m "<comment>"
  --ammend позволяет откатиться к состоянию, которое описывается последним(? забыл...) коммитом

4) Отмена коммита: git revert HEAD
  HEAD отменяет последний коммит в текущей ветке
  Чтобы удалить конкретный коммит стоит подставить его хэш вместо HEAD
  
5) Копирование репозитория c GitHub: git clone https://github.com/Bethrezen-ibn-Mathan/Develolpers_new

6) Отправка своих изменений ветки master на GitHub: git push -u https://github.com/Bethrezen-ibn-Mathan/Develolpers_new master

7) Копирование только измененных файлов: git fetch 

8) Создание новой ветки: git branch <name>
  -d удаляет ветку
  запуск без параметров показывает все существующие ветки
  
9) Переход на нужную ветку: git checkout <name>
  -b предварительно создаёт ветку

10) Слияние веток: git merge <name>
  Изменения окажутся в той ветке, в которой вы находитесь
  --no-ff не позволяет использовать fast-forward, принуждая git делать именно merge

11) просмотр состояния файлов: git status
  -s - сокращает кол-во информации

12) Просмотр коммитов: git log
  --graph 
  --<N> - показывает несколько последних коммитов
  --decorate - показывает, куда указывает HEAD
  Полезная комманда: git log --oneline --decorate --graph --all

13) Перебазирование: git rebase <name>  
	или 	git rebase <target> <name>
  Делает коммиты ветки "name" базирующимися на последнем коммите данной (или "target", во 2м примере)
  К примеру: 
  Было: 
  *	C4 < master
  |
  *	C3
  | *	  C6 < name
  * | 	C2
  | * 	  C5
  |/
  *	C1
  |
  *	C0
  Выполнили: git rebase master name
  Стало: 
  *	  C6' < name
  |
  *	  C5'
  |
  *	C4 < master
  |
  *	C3
  |
  *	C2
  |
  *	C1
  |
  *	C0
